/*
 *	This is an example configuration file.
 */

# Yes, even shell-like comments work...

# Configure logging
log syslog { warning, error, auth, fatal};
log stderr all;
#log "tmp" all;

# Override router ID
router id 91.213.236.2;

define myas=47184;

# This pseudo-protocol performs synchronization between BIRD's routing
# tables and the kernel. If your kernel supports multiple routing tables
# (as Linux 2.2.x does), you can run multiple instances of the kernel
# protocol and synchronize different kernel tables with different BIRD tables.
protocol kernel {
#	learn;			# Learn all alien routes from the kernel
	persist;		# Don't remove routes on bird shutdown
	scan time 20;		# Scan kernel routing table every 20 seconds
#	import none;		# Default is import all
	export all;		# Default is export none
#	kernel table 5;		# Kernel table to synchronize with (default: main)
}

# This pseudo-protocol watches all interface up/down events.
protocol device {
	scan time 10;		# Scan interfaces every 10 seconds
}

# This function excludes weird networks
function avoid_martians_6()
prefix set martians6;
{
        # http://www.space.net/~gert/RIPE/ipv6-filters.html
        martians6 = [ 3ffe::/16+, 2001:db8::/32+, 2001::/33+, 2002::/17+, ::/8+,  fe00::/9+, ff00::/8+ ];

        if net.ip = :: then return false;

        if (net.len < 19) || (net.len > 48) then return false;

        if net ~ martians6 then return false;

        return true;
}


function bgp_out(int peeras)
{
        if ! (source = RTS_BGP ) then return false;
        if (0,peeras) ~ bgp_community then return false;
        if (myas,peeras) ~ bgp_community then return true;
        if (0, myas) ~ bgp_community then return false;
        return true;
}

function bgp_in (int peeras)
{
        if ! (avoid_martians_6()) then return false;
	return true;
}

# Include dynamically generated part of the configuration
include "ipv6.conf";